apiVersion: v1
kind: Pod
metadata:
  name: cometa-chrome
  namespace: cometa
spec:
  tolerations:
  - key: "architecture"
    operator: "Equal"
    value: "amd"
    effect: "NoSchedule"
  securityContext:
    fsGroup: 472
    runAsGroup: 472
    runAsNonRoot: true
    runAsUser: 472
  containers:
  - name: cometa-chrome
    image: cometa/chrome:130.0
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsGroup: 472
      runAsUser: 472
      seccompProfile:
        type: RuntimeDefault
    resources:
      limits:
        cpu: "2"
        memory: "2Gi"
      requests:
        cpu: "1"
        memory: "1Gi"
    env:
    - name: AUTO_RECORD
      value: "true"
    - name: VIDEO_PATH
      value: "/video"
    ports:
    - containerPort: 4444
      protocol: TCP
    - containerPort: 7900
      protocol: TCP
    volumeMounts:
    - name: cometa-volume
      mountPath: /video
      subPath: data/cometa/videos
  volumes:
  - name: cometa-volume
    persistentVolumeClaim:
      claimName: cometa-data-volume-claim


---

apiVersion: v1
kind: Service
metadata:
  name: cometa-chrome-service
  namespace: cometa
spec:
  selector:
    app: cometa-chrome
  ports:
  - name: selenium
    protocol: TCP
    port: 4444
    targetPort: 4444
  - name: vnc
    protocol: TCP
    port: 7900
    targetPort: 7900
  type: ClusterIP


# ---

# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: cometa-django-network-policy
#   namespace: cometa
# spec:
#   podSelector: 
#     matchLabels:
#       app: cometa-django-pod # This matches all pods in the namespace
#   policyTypes:
#     - Ingress
#   ingress:
#     - from:
#         - podSelector:
#             matchLabels:
#               app: cometa-behave-pod
#           namespaceSelector:
#             matchLabels:
#               name: cometa  # Restrict ingress to pods in the 'cometa' namespace