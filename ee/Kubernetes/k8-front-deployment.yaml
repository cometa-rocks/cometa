apiVersion: apps/v1
kind: Deployment
metadata:
  name: cometa-front-deployment
  namespace: cometa  # Set the namespace to 'cometa'
spec:
  replicas: 1  # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: cometa-front-pod  # Ensure this matches the label used in the template
  template:
    metadata:
      labels:
        app: cometa-front-pod
    spec:
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      containers:
      - name: cometa-front-container
        # image: cometa/front:latest
        image: cometa/front:latest
        ports:
        - containerPort: 8080
        - containerPort: 8443

        env:
        - name: DJANGO_SERVER_URL
          value: "cometa-django-service"
        - name: DJANGO_SERVER_PORT
          value: "8000"
        - name: SOCKET_SERVER_URL
          value: "cometa-socket-service"
        - name: SOCKET_SERVER_PORT
          value: "3001"
        - name: SELENOID_SERVER_URL
          value: "selenium-grid-selenium-hub"
        - name: SELENOID_SERVER_PORT
          value: "4444"
        - name: NOVNC_SERVER_URL
          value: "cometa-novnc-service"
        - name: NOVNC_SERVER_PORT
          value: "8080"
        # This is used to tell apache it is a Kubernetes installation, Used in paths.conf file
        - name: IS_KUBERNETES_INSTALLATION
          value: "true" # true/false

        volumeMounts:
        - name: cometa-volume
          mountPath: /screenshots
          subPath: ./data/cometa/screenshots
        - name: cometa-volume
          mountPath: /videos
          subPath: ./data/cometa/videos
        - name: cometa-volume
          mountPath: /share
          # mountPath: /code/front/apache-conf
          subPath: ./share/front
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsGroup: 472
          runAsUser: 472
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
      volumes:
      - name: cometa-volume
        persistentVolumeClaim:
          claimName: cometa-volume-claim
      # restartPolicy: Always (uncomment if needed, default is Always for Deployment)

---
apiVersion: v1
kind: Service
metadata:
  name: cometa-front-service
  namespace: cometa  # Set the namespace to 'cometa'
spec:
  selector:
    app: cometa-front-pod
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8443
    - name: dev-mod
      protocol: TCP
      port: 4200
      targetPort: 4200
