apiVersion: apps/v1
kind: Deployment
metadata:
  name: cometa-behave-deployment
  namespace: cometa  # Specify the namespace
  labels:
    app: cometa-behave-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cometa-behave-pod
  template:
    metadata:
      labels:
        app: cometa-behave-pod
    spec:
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      containers:
      - name: cometa-behave-container
        image: cometa/behave:latest
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsGroup: 472
          runAsUser: 472
          seccompProfile:
            type: RuntimeDefault
        ports:
        - containerPort: 8001
        command: ["./entry.sh"]
        volumeMounts:
        - name: cometa-volume
          mountPath: /opt/code/screenshots
          subPath: ./data/cometa/screenshots
        - name: cometa-volume
          mountPath: /opt/code/videos
          subPath: ./data/cometa/videos
        - name: cometa-volume
          mountPath: /code/behave/pdf
          subPath: ./data/cometa/pdf
        - name: cometa-volume
          mountPath: /code/behave/downloads
          subPath: ./data/cometa/downloads
        - name: cometa-volume
          mountPath: /code/behave/department_data
          subPath: ./data/department_data
        - name: cometa-volume
          mountPath: /opt/code/department_data
          subPath: ./data/department_data
        - name: cometa-volume
          mountPath: /share
          subPath: ./share
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: REDIS_SERVER
          value: "cometa-redis-service"
        - name: REDIS_PORT
          value: "6379" 
        - name: REDIS_WORKERS
          value: "10"
        - name: THREADS
          value: "10"
        - name: CRONTAB_SERVER_URL
          value: "cometa-crontab-service"
        - name: CRONTAB_SERVER_PORT
          value: "8080"
        - name: SOCKET_SERVER_URL
          value: "cometa-socket-service"
        - name: SOCKET_SERVER_PORT
          value: "3001"
        - name: DJANGO_SERVER_URL
          value: "cometa-django-service"
        - name: DJANGO_SERVER_PORT
          value: "8000"
        # resources:
        #   limits:
        #     cpu: "2"
        #     memory: "2Gi"
        #   requests:
        #     cpu: "1"
        #     memory: "1Gi"
      volumes:
      - name: cometa-volume
        persistentVolumeClaim:
          claimName: cometa-volume-claim


---

apiVersion: v1
kind: Service
metadata:
  name: cometa-behave-service
  namespace: cometa  # Specify the namespace
spec:
  selector:
    app: cometa-behave-pod
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: behave-allow-from-django
  namespace: cometa  # Ensure this is applied within the 'cometa' namespace
spec:
  podSelector:
    matchLabels:
      app: cometa-behave-pod  # This selects the pods that the policy applies to
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: cometa-django-pod  # Only allow pods with this label
      namespaceSelector:
        matchLabels:
          name: cometa  # Restrict ingress to pods in the 'cometa' namespace

    ports:
    - protocol: TCP
      port: 8001  # Assuming traffic comes on port 8001
