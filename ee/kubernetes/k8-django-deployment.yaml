apiVersion: apps/v1
kind: Deployment
metadata:
  name: cometa-django-deployment
  namespace: cometa  # Added namespace
spec:
  replicas: 1  # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: cometa-django-pod  # Ensure this matches the label used in the template
  template:
    metadata:
      labels:
        app: cometa-django-pod
    spec:
      containers:
      - name: cometa-django
        image: cometa/cometa-python:1.0
        command: ["bash", "start.sh", "-dev"]
        workingDir: /opt/code
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: DATABASE_SERVER
          value: "postgres-service"
        - name: DATABASE_PORT
          value: "5432"
        - name: FRONT_SERVER_HOST
          value: "cometa-front-service"
        - name: CRONTAB_SERVER_URL
          value: "cometa-crontab-service"
        - name: CRONTAB_SERVER_PORT
          value: "8080"
        - name: SOCKET_SERVER_URL
          value: "cometa-socket-service"
        - name: SOCKET_SERVER_PORT
          value: "3001"
        - name: BEHAVE_SERVER_URL
          value: "cometa-behave-service"
        - name: BEHAVE_SERVER_PORT
          value: "8001"
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: cometa-volume
          mountPath: /code/behave/screenshots
          subPath: ./data/cometa/screenshots
        - name: cometa-volume
          mountPath: /code/behave/videos
          subPath: ./data/cometa/videos
        - name: cometa-volume
          mountPath: /code/behave/pdf
          subPath: ./data/cometa/pdf
        - name: cometa-volume
          mountPath: /code/behave/downloads
          subPath: ./data/cometa/downloads
        - name: cometa-volume
          mountPath: /code
          subPath: ./backend
        - name: cometa-volume
          mountPath: /opt/code
          subPath: ./backend/src
        - name: cometa-volume
          mountPath: /etc/cron.d/crontab
          subPath: ./backend/crontabs/cometa_django_crontab
      volumes:
      - name: cometa-volume
        persistentVolumeClaim:
          claimName: cometa-volume-claim

---
apiVersion: v1
kind: Service
metadata:
  name: cometa-django-service
  namespace: cometa  # Added namespace
spec:
  selector:
    app: cometa-django-pod
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cometa-django-network-policy
  namespace: cometa
spec:
  podSelector: 
    matchLabels:
      app: cometa-postgres-pod # This matches all pods in the namespace
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: cometa-behave-service
          namespaceSelector:
            matchLabels:
              name: cometa  # Restrict ingress to pods in the 'cometa' namespace

        - podSelector:
            matchLabels:
              app: cometa-front-service
          namespaceSelector:
            matchLabels:
              name: cometa  # Restrict ingress to pods in the 'cometa' namespace
