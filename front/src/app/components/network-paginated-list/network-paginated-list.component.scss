@import 'breakpoints';
@import 'color';



.custom_toolbar {
  display: flex;
  justify-content: right;
  align-items: center;
  margin-right: 5px;
  min-height: 50px;
  padding: 5px;
}

button {
  color: #000;
  margin-left: 5px;
  width: 175px;
  min-height: 35px;
  mat-icon {
    font-size: 1.125rem;
    width: 1.125rem;
    height: 1.125rem;
    margin-left: -4px;
    margin-right: 8px;
    display: inline-block;
  }
}



.paginated-rows {
  overflow-y: auto;
  margin-bottom: 60px;
}

.header {
  height: 50px;
}

.pagination {
  display: flex;
  align-items: center;
  justify-content: center;
  // creates unnecessary white space below and above paginator, thus reducing the size of data table significantly
  // height: 56px;
  // margin-top: 10px;
  // margin-bottom: 20px;
  font-size: 1.4rem;
  line-height: 40px;
  font-weight: bold;
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: #F2F2F2;
  box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.3),
  0 10px 2px 0 rgba(0, 0, 0, 0.2),
  0 2px 6px 0 rgba(0, 0, 0, 10.15);
  &::ng-deep .mat-spinner {
    margin-top: 10px;
  }
  &::ng-deep .mat-icon {
    font-size: 30px;
    height: 30px;
    width: 30px;
  }
  .before {
    margin-right: 10px;
  }
  .after {
    margin-left: 10px;
  }
}

:host {
  display: contents;
}

:host::ng-deep .loading-pagination {
  margin: 100px auto 0;
}

:host::ng-deep .mat-paginator-page-size-label {
  white-space: nowrap;
}

.skeleton-rows {
  .skeleton-row:after {
    content: '';
    display: block;
    height: 100%;
    width: 100%;
    @include skeleton;
  }
}

.viewport {
  height: 315px;
  width: 100%;
  // width: 200px;
  // border: 1px solid black;
}

.item {
  height: 50px;
}

// .container-button-fails {
//   width: 100%;
// }

.container-button-fails {
  margin-right: auto;
}

.container-number-fails {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.3),
              0 10px 2px 0 rgba(0, 0, 0, 0.2),
              0 2px 6px 0 rgba(0, 0, 0, 0.15);
  padding: 0;
  display: flex;
  justify-content: center !important;
  align-items: center !important;
}

.container-fails {
  display: flex;
  position: fixed;
  top: 25%;
  left: 25%;
  background-color: bisque;
  width: 60%;
  height: 50%;
  border-radius: 5px;
  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

.fails {
  width: 100%;
  height: 15%;
}


.step-row {
  display: flex;
  align-items: center;
  flex-direction: column;
  min-height: 53px;
  box-sizing: border-box;
  font-weight: bold;
  cursor: pointer;
  padding-right: 10px;
  @include for-tablet-portrait-up {
    padding-right: 0;
  }
  &:nth-child(odd) {
    background-color: #e6e6e6;
    border-bottom: 2px solid rgba(black, 0.05);
  }
  &:nth-child(even) {
    background-color: #f2f2f2;
    border-bottom: 2px solid rgba(black, 0.1);
  }
  &:hover .name {
    color: $blue;
  }
  .status-bar {
    flex: 0 5px;
    max-width: 5px;
    height: 100%;
    &.success, &.Success {
      background-color: $good;
    }
    &.failed, &.Failed {
      background-color: $bad;
    }
    &.skipped, &.Skipped {
      background-color: rgb(204, 204, 129);
    }
    @include for-tablet-portrait-up {
      display: none;
    }
  }
  .name {
    max-width: 90%;
    padding-left: 10px;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    font-size: 0.9rem;
    @include for-tablet-portrait-up {
      padding-left: 20px;
      font-size: 1rem;
    }
    .step-index {
      margin-right: 15px;
      color: $blue;
      min-width: 30px;
      text-align: center;
      display: none;
      @include for-tablet-portrait-up {
        display: initial;
      }
    }
    .step-content {
      max-width: 100%;
      // padding: 10px 0; prevents step row from increasing its height when custom error message has to be displayed, thus causing content overflow
      .feature-reference,
      .step-error {
        font-size: 0.8rem;
        margin-bottom: 3px;
        display: inline-flex;
        position: relative;
        transform: translate3d(0, 0, 0);
        transition: transform 0.15s ease-in-out;
      }

      .feature-reference {
        color: rgba(black, 0.55);
        &:hover {
          transform: translate3d(10px, 0, 0);
        }
      }

      .step-name,
      .step-error {
        word-break: break-all;
      }

      .step-error {
        max-width: 100%;
        color: $bad;
      }
    }
  }
}
