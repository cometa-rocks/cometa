@import 'color';
@import 'breakpoints';

:host {
  width: 100%;
  height: 0;
  padding: 25px 20px 0 20px;
  box-sizing: border-box;
}

// Expansion panel content styling
:host ::ng-deep {
  // Target the expanded content area
  .mtx-grid-expansion-detail {
    width: 100%;
    
    app-loading-spinner {
      display: block;
      width: 100%;
      text-align: center;
    }
  }
}

.mat-mdc-option {
  font-size: 14px !important;
  font-family: CorpoS,sans-serif !important;
}

// Accordion styles
mat-accordion {
  margin-bottom: 20px;
  
  mat-expansion-panel {
    margin-bottom: 16px;
    border-radius: 5px;
    
    mat-expansion-panel-header {
      padding: 0 24px;
      
      mat-panel-title {
        color: $dark;
        font-weight: 500;
      }
      
      mat-panel-description {
        color: rgba($dark, 0.7);
      }
    }
  }
  
  .filter-content {
    padding: 8px 0;
  }
}

// Execute panel styles
.edit-data-driven-test {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  margin-bottom: 15px;

  .edit-dep, .edit-file {
    min-width: 250px;
  }
}

.department-warning {
  display: flex;
  align-items: center;
  color: #f57c00;
  margin-bottom: 15px;
  
  mat-icon {
    margin-right: 10px;
  }
}

.table-container {
  width: 100%;
  overflow-x: auto;
}

.blue {
  color: $blue;
  font-weight: bold;
}

:host ::ng-deep .mtx-grid {
  padding-bottom: 25px;
  .mtx-grid-toolbar {
    padding: 0;
  }
  .mtx-grid-toolbar-content {
    flex-grow: 1;
    .custom_toolbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-right: 5px;
    }
    button {
      mat-icon {
        font-size: 1.125rem;
        width: 1.125rem;
        height: 1.125rem;
        margin-left: -4px;
        margin-right: 8px;
        display: inline-block;
      }
    }
  }
  table {
    margin-top: 30px;
    border-radius: 5px;
    background-color: $table-background-opaque;
    border-spacing: 0;
    box-shadow:
      0 3px 1px -2px $table-low-shadow,
      0 2px 2px 0 $table-medium-shadow,
      0 1px 5px 0 $table-high-shadow;
    thead tr {
      height: 55px;
      z-index: 10;
      th {
        white-space: nowrap;
        font-size: 15px;
        font-weight: bold;
        color: $column-header-dark;
        z-index: 4 !important;
        &:not(:first-child):not(:last-child):hover {
          background-color: $high-black-opaque;
          cursor: pointer;
        }
        &.name {
          border-right: none !important;
        }
        mat-icon {
          display: none;
        }
        &:nth-child(3) {
          z-index: 5 !important;
        }
      }
    }
    tbody tr {
      height: 45px;
      cursor: pointer;
      &:nth-child(2n + 2) {
        background-color: $low-black-opaque;
      }
      &:hover {
        background-color: $high-black-opaque;
      }
      &.selected {
        background-color: $selected-black-opaque;
        td {
          &.name {
            color: $blue;
          }
        }
      }
    }

    td {
      font-weight: bold;
      color: $dark;
      /* text-align: center; */
      &.name {
        text-align: left;
        border-right: none !important;
        & > div {
          display: flex;
          align-items: center;
          .mat-icon {
            margin-right: 5px;
            font-size: 22px;
            line-height: 22px;
            height: 22px;
            width: 22px;
          }
        }
      }
      .time {
        color: $text-pink;
      }
    }
    th,
    td {
      padding: 0 5px;
      border-bottom-width: 1px;
      border-bottom-style: solid;
      border-bottom-color: $table-low-shadow;
    }
    th:first-of-type,
    td:first-of-type {
      padding-left: 5px;
      &.running {
        width: 40px;
        &.disabled {
          width: 5px;
        }
      }
      .mat-icon {
        width: 30px;
        height: 30px;
        font-size: 25px;
        line-height: 30px;
      }
    }
    th:last-of-type,
    td:last-of-type {
      padding-right: 5px;
    }
  }

  // Override row cursor to default, allow specific elements to be pointers
  .mdc-data-table__row {
    cursor: default;
  }

  .mtx-grid-toggle {
    visibility: visible !important;
    opacity: 1 !important;
    width: 24px !important;
    height: 24px !important;
    min-width: 24px !important;
    margin-right: 8px !important;
    cursor: pointer; // Explicitly set pointer for the toggle
  }
  
  tr.no-expand .mtx-grid-toggle {
    visibility: hidden !important;
    width: 0 !important;
    margin-right: 0 !important;
    cursor: default; // No pointer if not expandable
  }

  // Ensure buttons within cells also get pointer
  .mdc-data-table__cell button {
    cursor: pointer;
  }
}

.cell.status {
  min-width: 90px;
}

// Styles for the flattened execute panel sections
.execute-section {
  margin-bottom: 20px;
  border: 1px solid rgba(0, 0, 0, 0.12);
  border-radius: 4px;
  overflow: hidden;

  .section-header {
    display: flex;
    flex-direction: column;
    padding: 16px 24px;
    background-color: rgba(0, 0, 0, 0.02);
    border-bottom: 1px solid rgba(0, 0, 0, 0.12);

    h3 {
      margin: 0;
      font-weight: 500;
      font-size: 16px;
      color: $dark;
    }

    .section-description {
      margin: 0;
      color: rgba($dark, 0.7);
      font-size: 14px;
    }
  }

  .section-content {
    padding: 16px 24px;
  }
}

.file-toolbar {
  justify-content: flex-end !important;
}

// Custom styling for snackbars
::ng-deep .data-driven-custom-snackbar {
  .mat-mdc-snack-bar-actions .mdc-button {
    color: $secondary-color !important; 
  }
}

// expansion content
.expansion-content {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  
  // Make the grid take full width
  mtx-grid {
    width: 100%;
    
    ::ng-deep td {
      font-weight: normal !important;
    }
  }
}

:host ::ng-deep .mat-mdc-select-panel {
  overflow-x: hidden !important;
}
